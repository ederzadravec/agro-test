{
  "openapi": "3.0.0",
  "info": {
    "title": "Agro",
    "version": "1.0.0",
    "description": "Generated by AdonisJS AutoSwagger https://github.com/ad-on-is/adonis-autoswagger"
  },
  "components": {
    "responses": {
      "Forbidden": {
        "description": "Access token is missing or invalid"
      },
      "Accepted": {
        "description": "The request was accepted"
      },
      "Created": {
        "description": "The resource has been created"
      },
      "NotFound": {
        "description": "The resource has been created"
      },
      "NotAcceptable": {
        "description": "The resource has been created"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Any": {
        "description": "Any JSON object not defined as schema"
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 100,
            "nullable": false
          },
          "page": {
            "type": "number",
            "example": 2,
            "nullable": false
          },
          "perPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "currentPage": {
            "type": "number",
            "example": 3,
            "nullable": false
          },
          "lastPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "firstPage": {
            "type": "number",
            "example": 1,
            "nullable": false
          },
          "lastPageUrl": {
            "type": "string",
            "example": "/?page=10",
            "nullable": false
          },
          "firstPageUrl": {
            "type": "string",
            "example": "/?page=1",
            "nullable": false
          },
          "nextPageUrl": {
            "type": "string",
            "example": "/?page=6",
            "nullable": false
          },
          "previousPageUrl": {
            "type": "string",
            "example": "/?page=5",
            "nullable": false
          }
        }
      },
      "CultivatedPlant": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 698
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "productor_id": {
            "type": "number",
            "example": 865
          },
          "farm_id": {
            "type": "number",
            "example": 427
          },
          "harvest_id": {
            "type": "number",
            "example": 90
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "farm": {
            "$ref": "#/components/schemas/Farm",
            "example": null
          },
          "productor": {
            "$ref": "#/components/schemas/Productor",
            "example": null
          },
          "harvest": {
            "$ref": "#/components/schemas/Harvest",
            "example": null
          }
        },
        "description": "CultivatedPlant (Model)"
      },
      "Farm": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 233
          },
          "productor_id": {
            "type": "number",
            "example": 952
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "city": {
            "type": "string",
            "example": "Chicago"
          },
          "state_id": {
            "type": "number",
            "example": 977
          },
          "total_area": {
            "type": "number",
            "example": 727
          },
          "areable_area": {
            "type": "number",
            "example": 568
          },
          "vegetation_area": {
            "type": "number",
            "example": 703
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "harvests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Harvest",
              "example": null
            }
          },
          "productor": {
            "$ref": "#/components/schemas/Productor",
            "example": null
          },
          "state": {
            "$ref": "#/components/schemas/InfoState",
            "example": null
          }
        },
        "description": "Farm (Model)"
      },
      "Harvest": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 919
          },
          "productor_id": {
            "type": "number",
            "example": 913
          },
          "farm_id": {
            "type": "number",
            "example": 580
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "cultivated_plants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CultivatedPlant",
              "example": null
            }
          },
          "farm": {
            "$ref": "#/components/schemas/Farm",
            "example": null
          },
          "productor": {
            "$ref": "#/components/schemas/Productor",
            "example": null
          }
        },
        "description": "Harvest (Model)"
      },
      "InfoState": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 36
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "uf": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "InfoState (Model)"
      },
      "Productor": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 47
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "cnpj": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "farms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Farm",
              "example": null
            }
          }
        },
        "description": "Productor (Model)"
      },
      "User": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "number",
            "example": 136
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "created_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-03-23T16:13:08.489+01:00",
            "format": "date-time"
          }
        },
        "description": "User (Model)"
      },
      "createCultivatedPlantValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 687,
            "required": true
          },
          "farm": {
            "type": "number",
            "example": 187,
            "required": true
          },
          "harvest": {
            "type": "number",
            "example": 697,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 687,
          "farm": 187,
          "harvest": 697
        },
        "description": "createCultivatedPlantValidator (Validator)"
      },
      "indexCultivatedPlantValidator": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 42
          },
          "limit": {
            "type": "number",
            "example": 257
          }
        },
        "example": {
          "page": 42,
          "limit": 257
        },
        "description": "indexCultivatedPlantValidator (Validator)"
      },
      "updateCultivatedPlantValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 87,
            "required": true
          },
          "farm": {
            "type": "number",
            "example": 825,
            "required": true
          },
          "harvest": {
            "type": "number",
            "example": 647,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 87,
          "farm": 825,
          "harvest": 647
        },
        "description": "updateCultivatedPlantValidator (Validator)"
      },
      "createFarmValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 415,
            "required": true
          },
          "city": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "state": {
            "type": "number",
            "example": 533,
            "required": true
          },
          "totalArea": {
            "type": "number",
            "example": 854,
            "required": true
          },
          "areableArea": {
            "type": "number",
            "example": 955,
            "required": true
          },
          "vegetationArea": {
            "type": "number",
            "example": 242,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 415,
          "city": "Lorem Ipsum",
          "state": 533,
          "totalArea": 854,
          "areableArea": 955,
          "vegetationArea": 242
        },
        "description": "createFarmValidator (Validator)"
      },
      "indexFarmValidator": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 785
          },
          "limit": {
            "type": "number",
            "example": 927
          },
          "productor": {
            "type": "number",
            "example": 793
          }
        },
        "example": {
          "page": 785,
          "limit": 927,
          "productor": 793
        },
        "description": "indexFarmValidator (Validator)"
      },
      "updateFarmValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 513,
            "required": true
          },
          "city": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "state": {
            "type": "number",
            "example": 105,
            "required": true
          },
          "totalArea": {
            "type": "number",
            "example": 940,
            "required": true
          },
          "areableArea": {
            "type": "number",
            "example": 555,
            "required": true
          },
          "vegetationArea": {
            "type": "number",
            "example": 495,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 513,
          "city": "Lorem Ipsum",
          "state": 105,
          "totalArea": 940,
          "areableArea": 555,
          "vegetationArea": 495
        },
        "description": "updateFarmValidator (Validator)"
      },
      "createHarvestValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 529,
            "required": true
          },
          "farm": {
            "type": "number",
            "example": 420,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 529,
          "farm": 420
        },
        "description": "createHarvestValidator (Validator)"
      },
      "indexHarvestValidator": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 126
          },
          "limit": {
            "type": "number",
            "example": 767
          },
          "farm": {
            "type": "number",
            "example": 653
          }
        },
        "example": {
          "page": 126,
          "limit": 767,
          "farm": 653
        },
        "description": "indexHarvestValidator (Validator)"
      },
      "updateHarvestValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "productor": {
            "type": "number",
            "example": 578,
            "required": true
          },
          "farm": {
            "type": "number",
            "example": 286,
            "required": true
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "productor": 578,
          "farm": 286
        },
        "description": "updateHarvestValidator (Validator)"
      },
      "indexInfoStateValidator": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 747
          },
          "limit": {
            "type": "number",
            "example": 387
          }
        },
        "example": {
          "page": 747,
          "limit": 387
        },
        "description": "indexInfoStateValidator (Validator)"
      },
      "createProductorValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "cnpj": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "minLength": 14
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "cnpj": "Lorem Ipsum"
        },
        "description": "createProductorValidator (Validator)"
      },
      "indexProductorValidator": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 730
          },
          "limit": {
            "type": "number",
            "example": 488
          }
        },
        "example": {
          "page": 730,
          "limit": 488
        },
        "description": "indexProductorValidator (Validator)"
      },
      "updateProductorValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "cnpj": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true,
            "minLength": 14
          }
        },
        "example": {
          "name": "Lorem Ipsum",
          "cnpj": "Lorem Ipsum"
        },
        "description": "updateProductorValidator (Validator)"
      },
      "createSessionValidator": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          },
          "password": {
            "type": "string",
            "example": "Lorem Ipsum",
            "required": true
          }
        },
        "example": {
          "login": "Lorem Ipsum",
          "password": "Lorem Ipsum"
        },
        "description": "createSessionValidator (Validator)"
      }
    }
  },
  "paths": {
    "/session": {
      "post": {
        "summary": "Create session (store)",
        "description": "Faz login\n\n _app/controllers/session_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "SESSION"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": "OK",
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": "bearer token"
                      }
                    }
                  }
                },
                "example": {
                  "status": "OK",
                  "data": {
                    "token": "bearer token"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "0": {
                          "type": "object",
                          "properties": {
                            "message": "erro"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "erro"
                    }
                  ]
                }
              }
            },
            "description": "Returns **400** (Bad Request) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": "login",
                  "password": "password"
                }
              },
              "example": {
                "login": "login",
                "password": "password"
              }
            }
          }
        }
      }
    },
    "/productor": {
      "get": {
        "summary": "Get a list of productor (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/productor_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "example": "10"
            }
          }
        ],
        "tags": [
          "PRODUCTOR"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Productor"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 47,
                      "name": "John Doe",
                      "cnpj": "Lorem Ipsum",
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00",
                      "farms": [
                        {
                          "id": 233,
                          "productor_id": 952,
                          "name": "John Doe",
                          "city": "Chicago",
                          "state_id": 977,
                          "total_area": 727,
                          "areable_area": 568,
                          "vegetation_area": 703,
                          "created_at": "2021-03-23T16:13:08.489+01:00",
                          "updated_at": "2021-03-23T16:13:08.489+01:00"
                        }
                      ]
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create productor (store)",
        "description": "Cria um produtor\n\n _app/controllers/productor_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "PRODUCTOR"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Productor"
              },
              "example": {
                "name": "John Doe",
                "cnpj": "Lorem Ipsum"
              }
            }
          }
        }
      }
    },
    "/productor/{id}": {
      "get": {
        "summary": "Get a single instance of productor (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/productor_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id do produtor",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PRODUCTOR"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Productor"
                },
                "example": {
                  "id": 47,
                  "name": "John Doe",
                  "cnpj": "Lorem Ipsum",
                  "created_at": "2021-03-23T16:13:08.489+01:00",
                  "updated_at": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update productor (update)",
        "description": "Altera um produtor\n\n _app/controllers/productor_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id do produtor",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PRODUCTOR"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Productor"
              },
              "example": {
                "name": "John Doe",
                "cnpj": "Lorem Ipsum"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete productor (destroy)",
        "description": "Remove um produtor\n\n _app/controllers/productor_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "PRODUCTOR"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/info-state": {
      "get": {
        "summary": "Get a list of info-state (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/info_state_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "example": "10"
            }
          }
        ],
        "tags": [
          "INFO-STATE"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InfoState"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 36,
                      "name": "John Doe",
                      "uf": "Lorem Ipsum",
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00"
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create info-state (store)",
        "description": "\n\n _app/controllers/info_state_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "INFO-STATE"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        }
      }
    },
    "/info-state/{id}": {
      "get": {
        "summary": "Get a single instance of info-state (show)",
        "description": "\n\n _app/controllers/info_state_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "INFO-STATE"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update info-state (update)",
        "description": "\n\n _app/controllers/info_state_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "INFO-STATE"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        }
      },
      "delete": {
        "summary": "Delete info-state (destroy)",
        "description": "\n\n _app/controllers/info_state_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "INFO-STATE"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/farm": {
      "get": {
        "summary": "Get a list of farm (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/farm_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "example": "10"
            }
          }
        ],
        "tags": [
          "FARM"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Farm"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 233,
                      "productor_id": 952,
                      "name": "John Doe",
                      "city": "Chicago",
                      "state_id": 977,
                      "total_area": 727,
                      "areable_area": 568,
                      "vegetation_area": 703,
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00",
                      "harvests": [
                        {
                          "id": 919,
                          "productor_id": 913,
                          "farm_id": 580,
                          "name": "John Doe",
                          "created_at": "2021-03-23T16:13:08.489+01:00",
                          "updated_at": "2021-03-23T16:13:08.489+01:00"
                        }
                      ],
                      "productor": {
                        "id": 47,
                        "name": "John Doe",
                        "cnpj": "Lorem Ipsum",
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      },
                      "state": {
                        "id": 36,
                        "name": "John Doe",
                        "uf": "Lorem Ipsum",
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      }
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create farm (store)",
        "description": "Cria uma fazenda\n\n _app/controllers/farm_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "FARM"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Farm"
              },
              "example": {
                "productor_id": 952,
                "name": "John Doe",
                "city": "Chicago",
                "state_id": 977,
                "total_area": 727,
                "areable_area": 568,
                "vegetation_area": 703
              }
            }
          }
        }
      }
    },
    "/farm/{id}": {
      "get": {
        "summary": "Get a single instance of farm (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/farm_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da fazenda",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "FARM"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Farm"
                },
                "example": {
                  "id": 233,
                  "productor_id": 952,
                  "name": "John Doe",
                  "city": "Chicago",
                  "state_id": 977,
                  "total_area": 727,
                  "areable_area": 568,
                  "vegetation_area": 703,
                  "created_at": "2021-03-23T16:13:08.489+01:00",
                  "updated_at": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update farm (update)",
        "description": "Altera uma fazenda\n\n _app/controllers/farm_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da fazenda",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "FARM"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Farm"
              },
              "example": {
                "productor_id": 952,
                "name": "John Doe",
                "city": "Chicago",
                "state_id": 977,
                "total_area": 727,
                "areable_area": 568,
                "vegetation_area": 703
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete farm (destroy)",
        "description": "Remove uma fazenda\n\n _app/controllers/farm_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "FARM"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/harvest": {
      "get": {
        "summary": "Get a list of harvest (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/harvest_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "example": "10"
            }
          }
        ],
        "tags": [
          "HARVEST"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Harvest"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 919,
                      "productor_id": 913,
                      "farm_id": 580,
                      "name": "John Doe",
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00",
                      "cultivated_plants": [
                        {
                          "id": 698,
                          "name": "John Doe",
                          "productor_id": 865,
                          "farm_id": 427,
                          "harvest_id": 90,
                          "created_at": "2021-03-23T16:13:08.489+01:00",
                          "updated_at": "2021-03-23T16:13:08.489+01:00"
                        }
                      ],
                      "farm": {
                        "id": 233,
                        "productor_id": 952,
                        "name": "John Doe",
                        "city": "Chicago",
                        "state_id": 977,
                        "total_area": 727,
                        "areable_area": 568,
                        "vegetation_area": 703,
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      },
                      "productor": {
                        "id": 47,
                        "name": "John Doe",
                        "cnpj": "Lorem Ipsum",
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      }
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create harvest (store)",
        "description": "Cria uma safra\n\n _app/controllers/harvest_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "HARVEST"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Harvest"
              },
              "example": {
                "productor_id": 913,
                "farm_id": 580,
                "name": "John Doe"
              }
            }
          }
        }
      }
    },
    "/harvest/{id}": {
      "get": {
        "summary": "Get a single instance of harvest (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/harvest_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da safra",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "HARVEST"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Harvest"
                },
                "example": {
                  "id": 919,
                  "productor_id": 913,
                  "farm_id": 580,
                  "name": "John Doe",
                  "created_at": "2021-03-23T16:13:08.489+01:00",
                  "updated_at": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update harvest (update)",
        "description": "Altera uma safra\n\n _app/controllers/harvest_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da safra",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "HARVEST"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Harvest"
              },
              "example": {
                "productor_id": 913,
                "farm_id": 580,
                "name": "John Doe"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete harvest (destroy)",
        "description": "Remove uma safra\n\n _app/controllers/harvest_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "HARVEST"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/cultivated-plant": {
      "get": {
        "summary": "Get a list of cultivated-plant (index)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/cultivated_plant_controller.ts_ - **index**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "example": "1"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "example": "10"
            }
          }
        ],
        "tags": [
          "CULTIVATED-PLANT"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CultivatedPlant"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 698,
                      "name": "John Doe",
                      "productor_id": 865,
                      "farm_id": 427,
                      "harvest_id": 90,
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00",
                      "farm": {
                        "id": 233,
                        "productor_id": 952,
                        "name": "John Doe",
                        "city": "Chicago",
                        "state_id": 977,
                        "total_area": 727,
                        "areable_area": 568,
                        "vegetation_area": 703,
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      },
                      "productor": {
                        "id": 47,
                        "name": "John Doe",
                        "cnpj": "Lorem Ipsum",
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      },
                      "harvest": {
                        "id": 919,
                        "productor_id": 913,
                        "farm_id": 580,
                        "name": "John Doe",
                        "created_at": "2021-03-23T16:13:08.489+01:00",
                        "updated_at": "2021-03-23T16:13:08.489+01:00"
                      }
                    }
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create cultivated-plant (store)",
        "description": "Cria uma cultura plantada\n\n _app/controllers/cultivated_plant_controller.ts_ - **store**",
        "parameters": [],
        "tags": [
          "CULTIVATED-PLANT"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CultivatedPlant"
              },
              "example": {
                "name": "John Doe",
                "productor_id": 865,
                "farm_id": 427,
                "harvest_id": 90
              }
            }
          }
        }
      }
    },
    "/cultivated-plant/{id}": {
      "get": {
        "summary": "Get a single instance of cultivated-plant (show)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/cultivated_plant_controller.ts_ - **show**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da cultura plantada",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "CULTIVATED-PLANT"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CultivatedPlant"
                },
                "example": {
                  "id": 698,
                  "name": "John Doe",
                  "productor_id": 865,
                  "farm_id": 427,
                  "harvest_id": 90,
                  "created_at": "2021-03-23T16:13:08.489+01:00",
                  "updated_at": "2021-03-23T16:13:08.489+01:00"
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update cultivated-plant (update)",
        "description": "Altera uma cultura plantada\n\n _app/controllers/cultivated_plant_controller.ts_ - **update**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id da cultura plantada",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "CULTIVATED-PLANT"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CultivatedPlant"
              },
              "example": {
                "name": "John Doe",
                "productor_id": 865,
                "farm_id": 427,
                "harvest_id": 90
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete cultivated-plant (destroy)",
        "description": "Remove uma cultura plantada\n\n _app/controllers/cultivated_plant_controller.ts_ - **destroy**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          "CULTIVATED-PLANT"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ status: \"OK\" }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          },
          "400": {
            "content": {
              "text/plain": {
                "example": "{ status: \"ERROR\" }"
              }
            },
            "description": "Returns **400** (Bad Request) as **text/plain**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/dashboard/total": {
      "get": {
        "summary": " (total)",
        "description": "Returns **200** (OK) as **text/plain**\n\n _app/controllers/dashboard_controller.ts_ - **total**",
        "parameters": [],
        "tags": [
          "DASHBOARD"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "{ farms: 0, total_area_sum: 0, areable_area_sum: 1, vegetation_area_sum: 1 }"
              }
            },
            "description": "Returns **200** (OK) as **text/plain**"
          }
        },
        "security": []
      }
    },
    "/dashboard/by-state": {
      "get": {
        "summary": " (byState)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/dashboard_controller.ts_ - **byState**",
        "parameters": [],
        "tags": [
          "DASHBOARD"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "example": [
                  {
                    "state": {
                      "id": 36,
                      "name": "John Doe",
                      "uf": "Lorem Ipsum",
                      "created_at": "2021-03-23T16:13:08.489+01:00",
                      "updated_at": "2021-03-23T16:13:08.489+01:00"
                    },
                    "total": 1
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": []
      }
    },
    "/dashboard/by-cultivated-plant": {
      "get": {
        "summary": " (byCultivatedPlant)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/controllers/dashboard_controller.ts_ - **byCultivatedPlant**",
        "parameters": [],
        "tags": [
          "DASHBOARD"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "example": [
                  {
                    "name": "nome",
                    "total": 1
                  }
                ]
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          }
        },
        "security": []
      }
    }
  },
  "tags": [
    {
      "name": "SESSION",
      "description": "Everything related to SESSION"
    },
    {
      "name": "PRODUCTOR",
      "description": "Everything related to PRODUCTOR"
    },
    {
      "name": "INFO-STATE",
      "description": "Everything related to INFO-STATE"
    },
    {
      "name": "FARM",
      "description": "Everything related to FARM"
    },
    {
      "name": "HARVEST",
      "description": "Everything related to HARVEST"
    },
    {
      "name": "CULTIVATED-PLANT",
      "description": "Everything related to CULTIVATED-PLANT"
    },
    {
      "name": "DASHBOARD",
      "description": "Everything related to DASHBOARD"
    }
  ]
}